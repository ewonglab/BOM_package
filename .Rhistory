SHAPdir
shiny::runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/results/shinyDebug')
shapValues
waterFallDat
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/Giannoulatou/AndrewSilver_2021_scRNA/shinyApp_Crohn_Allcells')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Giannoulatou/Crohn2021Manuscript/results/shinyApp')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/Giannoulatou/AndrewSilver_2021_scRNA/shinyApp_Crohn_Allcells')
devtools::install_github("https://github.com/espors/idepGolem")
library(idepGolem)
edit(run_app)
edit(run_app)
debug(run_app)
run_app()
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
getwd()
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
source("C:/Users/d.humphreys/Documents/GitHub/idepGolem/R/fct_01_load_data.R")
expression_file <- "C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Harvey/NKX2_5US_e9_e12_e15/results/NKX2_5US_mergedE9E12E15repeat.geneCounts.csv"
experiment_file <- "C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Harvey/NKX2_5US_e9_e12_e15/results/mergedE9E12E15.studyDesign.csv"
input_data(expression_file , experiment_file)
expression_file <- list(datapath="C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Harvey/NKX2_5US_e9_e12_e15/results/NKX2_5US_mergedE9E12E15repeat.geneCounts.csv")
experiment_file <- list(datapath="C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Harvey/NKX2_5US_e9_e12_e15/results/mergedE9E12E15.studyDesign.csv")
input_data(expression_file , experiment_file)
source("C:/Users/d.humphreys/Documents/GitHub/idepGolem/R/fct_01_load_data.R")
input_data(expression_file , experiment_file)
source("C:/Users/d.humphreys/Documents/GitHub/idepGolem/R/fct_01_load_data.R")
input_data(expression_file , experiment_file)
input_data(expression_file , experiment_file, go_button=FALSE)
source("C:/Users/d.humphreys/Documents/GitHub/idepGolem/R/fct_01_load_data.R")
input_data(expression_file , experiment_file, go_button=FALSE)
dim(expr)
source("C:/Users/d.humphreys/Documents/GitHub/idepGolem/R/fct_01_load_data.R")
input_data(expression_file , experiment_file, go_button=FALSE)
dim(expr)
expr
ignored_factors
nrow(expr)
paste0(row.names(expr)[ignored_factors], collapse = ", ")
ignored_rows
expr
-1 * ignored_factors
expr[-1 * ignored_factors, ]
expr[-1 * 1, ]
expr[-1 * 0, ]
expr[-1 * NULL, ]
expr[-1 , ]
expr[-1 * 3, ]
input_data(expression_file , experiment_file, go_button=FALSE)
ignored_rows
expr
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
genes <- c('ENSMUSG00000031201', 'ENSMUSG00000017146',
'ENSMUSG00000041147', 'ENSMUSG00000034218', 'ENSMUSG00000059552')
require(org.Mm.eg.db)
mapIds(
org.Mm.eg.db,
keys = genes,
column = 'SYMBOL',
keytype = 'ENSEMBL')
genes <- c(
'ENSMUSG00000034248','ENSMUSG00000001542','ENSMUSG00000001348','ENSMUSG00000041237','ENSMUSG00000028332','ENSMUSG00000026614'
)
require(org.Mm.eg.db)
mapIds(
org.Mm.eg.db,
keys = genes,
column = 'SYMBOL',
keytype = 'ENSEMBL')
runApp('GitHub/idepGolem')
runApp('GitHub/idepGolem')
runApp('N:/Data/Paul/WorkingFolder_fromPC/230804_Qing_LungInjury_CellChat_CellPhoneDB/lungInjuryShinyCell')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
runApp('N:/Data/Paul/WorkingFolder_fromPC/230804_Qing_LungInjury_CellChat_CellPhoneDB/lungInjuryShinyCell')
runApp('GitHub/idepGolem')
runApp('GitHub/idepGolem')
runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
shiny::runApp('GitHub/idepGolem')
BiocManager::install("EnhancedVolcano")
install.packages("ggdensity")
list.files(path="whatever"", pattern="*.txt)
list.files(path="whatever", pattern="*.txt")
shiny::runApp('GitHub/idepGolem')
# minimal example
nodes <- data.frame(id = 1:3)
edges <- data.frame(from = c(1,2), to = c(1,3))
visNetwork(nodes, edges)
## Not run:
# add a title
visNetwork(nodes, edges, main = "visNetwork minimal example")
visNetwork(nodes, edges, main = list(text = "visNetwork minimal example",
style = "font-family:Comic Sans MS;color:#ff0000;font-size:15px;text-align:center;"))
# and subtitle and footer
visNetwork(nodes, edges, main = "visNetwork minimal example",
submain = "For add a subtitle", footer = "Fig.1 minimal example")
# change background color
visNetwork(nodes, edges, background = "black")
# customization adding more variables (see visNodes and visEdges)
nodes <- data.frame(id = 1:10,
label = paste("Node", 1:10),                                 # labels
group = c("GrA", "GrB"),                                     # groups
value = 1:10,                                                # size
shape = c("square", "triangle", "box", "circle", "dot", "star",
"ellipse", "database", "text", "diamond"),         # shape
title = paste0("<p><b>", 1:10,"</b><br>Node !</p>"),         # tooltip
color = c("darkred", "grey", "orange", "darkblue", "purple"),# color
shadow = c(FALSE, TRUE, FALSE, TRUE, TRUE))                  # shadow
edges <- data.frame(from = sample(1:10,8), to = sample(1:10, 8),
label = paste("Edge", 1:8),                                 # labels
length = c(100,500),                                        # length
arrows = c("to", "from", "middle", "middle;to"),            # arrows
dashes = c(TRUE, FALSE),                                    # dashes
title = paste("Edge", 1:8),                                 # tooltip
smooth = c(FALSE, TRUE),                                    # smooth
shadow = c(FALSE, TRUE, FALSE, TRUE))                       # shadow
visNetwork(nodes, edges)
library(visNetwork)
# minimal example
nodes <- data.frame(id = 1:3)
edges <- data.frame(from = c(1,2), to = c(1,3))
visNetwork(nodes, edges)
## Not run:
# add a title
visNetwork(nodes, edges, main = "visNetwork minimal example")
visNetwork(nodes, edges, main = list(text = "visNetwork minimal example",
style = "font-family:Comic Sans MS;color:#ff0000;font-size:15px;text-align:center;"))
# and subtitle and footer
visNetwork(nodes, edges, main = "visNetwork minimal example",
submain = "For add a subtitle", footer = "Fig.1 minimal example")
# change background color
visNetwork(nodes, edges, background = "black")
# customization adding more variables (see visNodes and visEdges)
nodes <- data.frame(id = 1:10,
label = paste("Node", 1:10),                                 # labels
group = c("GrA", "GrB"),                                     # groups
value = 1:10,                                                # size
shape = c("square", "triangle", "box", "circle", "dot", "star",
"ellipse", "database", "text", "diamond"),         # shape
title = paste0("<p><b>", 1:10,"</b><br>Node !</p>"),         # tooltip
color = c("darkred", "grey", "orange", "darkblue", "purple"),# color
shadow = c(FALSE, TRUE, FALSE, TRUE, TRUE))                  # shadow
edges <- data.frame(from = sample(1:10,8), to = sample(1:10, 8),
label = paste("Edge", 1:8),                                 # labels
length = c(100,500),                                        # length
arrows = c("to", "from", "middle", "middle;to"),            # arrows
dashes = c(TRUE, FALSE),                                    # dashes
title = paste("Edge", 1:8),                                 # tooltip
smooth = c(FALSE, TRUE),                                    # smooth
shadow = c(FALSE, TRUE, FALSE, TRUE))                       # shadow
visNetwork(nodes, edges)
notes
nodes
edges
runApp('GitHub/idepGolem')
runApp('GitHub/idepGolem')
runApp('GitHub/idepGolem')
runApp('GitHub/idepGolem')
runApp('GitHub/idepGolem')
objects()
shiny::runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
runApp('N:/Data/Paul/WorkingFolder_fromPC/230804_Qing_LungInjury_CellChat_CellPhoneDB/lungInjuryShinyCell')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/smallIntestine/Shiny_RegionalDuoM1')
devtools::install_github("VCCRI/ShinyCell")
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
library(ShinyCell)
detach("package:ShinyCell", unload = TRUE)
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
input$ew20231011scRNAd1plt
input$ew20231011scRNAd1psz
input$sc1d1plt
devtools::install_github("VCCRI/ShinyCell")
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
devtools::install_github("VCCRI/ShinyCell")
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/shinyApp_MouseOrganogenesis')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/EmilyWong/CardiacAging/scRNA_seq_AgingHeart_2023-03-01')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/Giannoulatou/AndrewSilver_2021_scRNA/shinyApp_Crohn_Allcells')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/PublicData/mouse/PBMC_subsetted_multiome')
runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/Giannoulatou/AndrewSilver_2021_scRNA/shinyApp_Crohn_Allcells')
BiocManager::install("CAGEr")
install.packages("c:/Users/d.humphreys/Downloads/CAGEr_2.8.0.tar.gz",repos = NULL, type="source")
library(CAGEr)
searchTerm <- "heart"
library("CAGEr")
data(FANTOM5mouseSamples)
grep(pattern=searchTerm,x=FANTOM5mouseSamples$description,ignore.case = TRUE,value=TRUE)
data(FANTOM5humanSamples)
FANTOM5humanSamples
FANTOM5humanSamples$sample[1:5]
FANTOM5humanSamples[1:5,"data_url"]
debug(BagOfMotifs::matrix_binModel)
BagOfMotifs::matrix_binModel(target_ct = "Cardiomyocytes", data_path = "C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/tutorial/motifs/", qval_thresh = 0.5, out_filename = "deleteme.txt")
BagOfMotifs::matrix_binModel(target_ct = "Cardiomyocytes", data_path = "C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/tutorial/motifs/", qval_thresh = 0.5, out_filename = "deleteme.txt")
count_files -> counts_files
n
install.packages("shapr")
edit(shapr::shapr)
idTrack <- IdeogramTrack(chromosome=7, genome="mm9")
idTrack <- Gviz::IdeogramTrack(chromosome=7, genome="mm9")
idTrack <- Gviz::IdeogramTrack(chromosome=7, genome="mm9",)
session <- browserSession("UCSC")
library(rtracklayer)
> session <- browserSession("UCSC")
library(rtracklayer)
session <- browserSession("UCSC")
session
library(rtracklayer)
library(rtracklayer)
session <- browserSession("UCSC")
idTrack <- Gviz::IdeogramTrack(chromosome=7, genome="mm9")
idTrack <- Gviz::IdeogramTrack(chromosome=7, genome="mm9")
debug(BagOfMotifs::train_binary)
input_data <- 'c:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/results/BOM_vignetteTutorial/Cardiomyocytes_vs_other_train.txt'
BagOfMotifs::train_binary(input_data = input_data, save_name='deleteme.rds', early_stopping_rounds = 100, print_every_n = 100, thread=1)
BagOfMotifs::train_binary(input_data = input_data, save_name='deleteme.rds', early_stopping_rounds = 100, print_every_n = 100, nthread=1)
View(motifs_train)
View(counts.tab)
input_data
View(counts.tab)
input_data <- 'c:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/tutorial/'
debug(BagOfMotifs::matrix_binModel)
BagOfMotifs::matrix_binModel(target_ct = "Cardiomyocytes",
BagOfMotifs::matrix_binModel(target_ct = "Cardiomyocytes", data_path = input_data, qval_thresh = 0.5, out_filename = 'deleteme.txt' )
BagOfMotifs::matrix_binModel(target_ct = "Cardiomyocytes", data_path = input_data, qval_thresh = 0.5, out_filename = 'deleteme.txt' )
counts_files -> count_files
count_files -> counts_files
debug(BagOfMotifs::predict_binary)
motifs <- 'c:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/results/BOM_vignetteTutorial/Cardiomyocytes_vs_other_counts.txt'
xgb_model <- 'c:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/results/BOM_vignetteTutorial/Cardiomyocytes_vs_other.rds'
BagOfMotifs::predict_binary(motifs = motifs, xgb_model = xgb_model, training_set='deleteme.txt')
sim(motifs_train)
dim(motifs_train)
motifs_train[1:5,1:5]
counts.tab[1:5,1:5]
counts.tab[1:20,1:5]
motifs
setwd("c:/Users/d.humphreys/Documents/GitHub/BOM_package/")
devtools::build()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
devtools::document()  # Cannot do this via jupyterlab
setwd("c:/Users/d.humphreys/Documents/GitHub/BOM_package/")
devtools::build()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
shiny::runApp('C:/Users/d.humphreys/OneDrive - Victor Chang/LargeDataSets/singleCell/Giannoulatou/DuncanSparrow/etOHPilot_ShinyCell_InclIntronic_multi')
install.packages("shapviz")
getwd()
devtools::document()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
edit(BagOfMotifs::plotShapWaterFall)
detach("package:BagOfMotifs", unload = TRUE)
devtools::install()  # Cannot do this via jupyterlab
library(shapviz)
library(ggplot2)
library(patchwork)
library(xgboost)
params <- list(objective = "multi:softprob", num_class = 3, nthread = 1)
X_pred <- data.matrix(iris[, -5])
dtrain <- xgb.DMatrix(X_pred, label = as.integer(iris[, 5]) - 1)
fit <- xgb.train(params = params, data = dtrain, nrounds = 50)
iris
devtools::document()  # Cannot do this via jupyterlab
devtools::document()  # Cannot do this via jupyterlab
devtools::document()  # Cannot do this via jupyterlab
devtools::document()  # Cannot do this via jupyterlab
devtools::document()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
wd <- 'C:\Users\d.humphreys\OneDrive - Victor Chang\jupyter_lab\Wong\mouse_enh_grammar\'
wd <- 'C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar'
wd <- 'C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/'
BagOfMotifs::matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
debug(BagOfMotifs::matrix_binModel)
BagOfMotifs::matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
data_path = paste0(wd,'tutorial/motifs/')
counts_files <- list.files(path=data_path, full.names =T, recursive=T, pattern='fimo.tsv*')
counts <- lapply(counts_files[1:2], data.table::fread)
counts_files
test <- data.table::fread(count_files[1])
test <- data.table::fread(counts_files[1])
test <- data.table::fread(counts_files[2])
test <- read.table(counts_files[2])
test <- read.table(counts_files[2], sep="\t")
test <- data.table::fread(counts_files[2], sep = "\t")
test <- data.table::fread(counts_files[2], sep = "\t")
counts <- lapply(counts_files[1:2], read.table, sep="\t")
counts <- lapply(counts_files, read.table, sep="\t")
counts <- parallel::mclapply(counts_files, read.table, sep="\t")
parallel::detectCores()
counts <- parallel::parLapply(8, counts_file, read.table, sep="\t")
cl <- parallel::makeCluster(8)
counts <- parallel::parLapply(cl, counts_file, read.table, sep="\t")
counts <- parallel::parLapply(cl, counts_files, read.table, sep="\t")
cl <- parallel::makeCluster(detectCores())
stopCluser(cl)
stopCluster(cl)
parallel::stopCluster(cl)
cl <- parallel::makeCluster(1)
counts <- parallel::parLapply(cl, counts_files, read.table, sep="\t")
parallel::stopCluster(cl)
cl <- parallel::makeCluster(8)
counts <- parallel::parLapply(cl, counts_files, read.table, sep="\t")
parallel::stopCluster(cl)
devtools::document()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
pb <- txtProgressBar(min = 0, max=5, style=3, width=50, char="=")
getTxtProgressBar(pb)
setTxtProgressBar(pb,1)
getTxtProgressBar(pb)
getTxtProgressBar(pb,getTxtProgressBar(pb)+1)
setTxtProgressBar(pb,getTxtProgressBar(pb)+1)
close(pb)
pb <- txtProgressBar(min = 0, max=5, style=3, width=50, char="=")
lapply(1:3, FUN = function(x) {sleep(1) ; getTxtProgressBar(pb,getTxtProgressBar(pb)+1)})
lapply(1:3, FUN = function(x) { getTxtProgressBar(pb,getTxtProgressBar(pb)+1)})
lapply(1:3, FUN = function(x) { setTxtProgressBar(pb,getTxtProgressBar(pb)+1)})
close(pb)
devtools::install()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
devtools::install()  # Cannot do this via jupyterlab
source("C:\Users\d.humphreys\Documents\GitHub\BOM_package\R\matrix_for_binary_model.R")
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
debug(binModel_oneVsOthers)
wd
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
celltypes[celltypes != target_ct][i]
seq_along(negative_set)
celltypes[celltypes != target_ct][1]
head(negative_set[[1]])
celltypes[celltypes != target_ct]
n_CREs_by_ct
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
Q
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
debug(binModel_oneVsOthers)
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
debug(binModel_oneVsOthers)
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
debug(binModel_oneVsOthers)
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
debug(binModel_oneVsOthers)
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
debug(binModel_oneVsOthers)
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
names(counts)
length(counts)
head(tmp)
head(counts[[ct]])
head(counts[["Cardiomyocytes"]])
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
n_bkg
head(tmp)
round(n/(length(celltypes) -1))
celltypes
target_ct
n_CREs_by_ct[target_ct]
n_CREs_by_ct
Q
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
head(counts[[1]])
head(counts[[2]])
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = "results/BOM_vignetteTutorial/")
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
matrix_binModel(target_ct = "Cardiomyocytes", data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = paste0(wd,"results/BOM_vignetteTutorial/"))
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
matrix_binModel(data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = paste0(wd,"results/BOM_vignetteTutorial/"))
debug(binModel_oneVsOthers)
matrix_binModel(data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = paste0(wd,"results/BOM_vignetteTutorial/"))
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
matrix_binModel(data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = paste0(wd,"results/BOM_vignetteTutorial/"))
source("C:/Users/d.humphreys/Documents/GitHub/BOM_package/R/matrix_for_binary_model.R")
matrix_binModel(data_path = paste0(wd,'tutorial/motifs/'), qval_thresh = 0.5, outDir = paste0(wd,"results/BOM_vignetteTutorial/"))
devtools::install()
devtools::install()
devtools::document()
rm(binModel_oneVsOthers())
rm(binModel_oneVsOthers
)
rm(matrix_binModel)
devtools::install()
devtools::install()
extdata_path <- system.file("extdata",package = "BagOfMotifs")
gimme.fn <- paste0(extdata_path,"/gimme.vertebrate.v5.0.annot_summarized_shorten.txt.gz")
gimme_annot <- read.table(gimme.fn,header = TRUE, fill=TRUE)
xgbDataDir <- 'C:/Users/d.humphreys/OneDrive - Victor Chang/jupyter_lab/Wong/mouse_enh_grammar/'
xgb_model <- readRDS(paste0(xgbDataDir,"results/BOM_vignetteTutorial/Cardiomyocytes_vs_other.rds"))
training_set = paste0(xgbDataDir,"results/BOM_vignetteTutorial/Cardiomyocytes_vs_other_train.txt")
ts <- read.table(training_set,header = TRUE)
dim(ts)
ts <- ts[,(ncol(ts)*-1)]
head(data.matrix(ts))
head(xgb_model$feature_names)
length(intersect(xgb_model$feature_names, colnames(ts)))
shp <- shapviz::shapviz(object = xgb_model, data.matrix(ts))
debug(BagOfMotifs::shapPlots)
BagOfMotifs::shapPlots(shp, plotType="bar", annotDat = gimme_annot)
p
p$data
annonTATE(p$data, annotDat)
p
factor(annonTATE(p$data, annotDat))
devtools::install()
debug(BagOfMotifs::shapPlots)
BagOfMotifs::shapPlots(shp, plotType="bar", annotDat = gimme_annot)
p
p$data
p <- BagOfMotifs::shapPlots(shp, plotType="bar", annotDat = gimme_annot)
p$data
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall", annotDat = gimme_annot)
p$data
unique(c('a','b', 'a'))
makeunique(c('a','b', 'a'))
make.unique(c('a','b', 'a'))
devtools::install()
devtools::install()
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall", annotDat = gimme_annot)
p
debug(BagOfMotifs::shapPlots)
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall", annotDat = gimme_annot)
TF_IDs
i
lookupIDs[i]
plotDat$value
plotDat$feature
plotDat$value[i] <- '1380 other features'
devtools::install()
debug(BagOfMotifs::shapPlots)
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall", annotDat = gimme_annot)
devtools::install()
debug(BagOfMotifs::shapPlots)
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall", annotDat = gimme_annot)
p
p$data
undebug(BagOfMotifs::shapPlots)
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall")
p$data
devtools::install()
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall")
p$data
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall", annotDat = gimme_annot)
p$data
debug(BagOfMotifs::shapPlots)
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall", annotDat = gimme_annot)
i <- 7
which(peakAnnotations$Motif %in% lookupIDs[i])
peakAnnotations$Motif[621]
peakAnnotations[621,]
paste0(unlist(peakAnnotations$Factor[idx]),
collapse = ",")
paste0(unlist(peakAnnotations$Factor[621]), collapse = ",")
i <- 1
TF_IDs
devtools::install()
p <- BagOfMotifs::shapPlots(shp, plotType="waterfall", annotDat = gimme_annot)
p
devtools::install()
5455*.125
BiocManager::install("OUTRIDER")
baseURL <- paste0("https://static-content.springer.com/esm/",
"art%3A10.1038%2Fncomms15824/MediaObjects/")
count_URL <- paste0(baseURL, "41467_2017_BFncomms15824_MOESM390_ESM.txt")
anno_URL <- paste0(baseURL, "41467_2017_BFncomms15824_MOESM397_ESM.txt")
ctsTable <- read.table(count_URL, sep="\t")
annoTable <- read.table(anno_URL, sep="\t", header=TRUE)
annoTable$sampleID <- annoTable$RNA_ID
object.size(ctsTable)
head(annoTable)
